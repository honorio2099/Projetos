// <auto-generated />
using System;
using EscolaAmarelinha.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace EscolaAmarelinha.Migrations
{
    [DbContext(typeof(ApplicationContext))]
    partial class ApplicationContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 64)
                .HasAnnotation("ProductVersion", "5.0.17");

            modelBuilder.Entity("EscolaAmarelinha.Models.Aluno", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("IdAluno");

                    b.Property<string>("CursoAluno")
                        .HasColumnType("varchar(15)");

                    b.Property<DateTime>("DataMatriculaAluno")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("GeneroAluno")
                        .HasColumnType("longtext");

                    b.Property<int>("Idade")
                        .HasColumnType("int");

                    b.Property<decimal>("MensalidadeAluno")
                        .HasColumnType("decimal (10,2)");

                    b.Property<string>("NomeAluno")
                        .HasColumnType("varchar(100)");

                    b.HasKey("Id");

                    b.ToTable("Alunos");
                });

            modelBuilder.Entity("EscolaAmarelinha.Models.Boletim", b =>
                {
                    b.Property<int>("IdBoletim")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("IdAluno")
                        .HasColumnType("int");

                    b.Property<int>("IdDisciplina")
                        .HasColumnType("int");

                    b.Property<double>("NotaDisciplina")
                        .HasColumnType("double");

                    b.HasKey("IdBoletim");

                    b.HasIndex("IdAluno");

                    b.HasIndex("IdDisciplina");

                    b.ToTable("Boletim");
                });

            modelBuilder.Entity("EscolaAmarelinha.Models.Disciplina", b =>
                {
                    b.Property<int>("idDisciplina")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("NomeDisciplina")
                        .HasColumnType("varchar(50)");

                    b.HasKey("idDisciplina");

                    b.ToTable("Disciplinas");
                });

            modelBuilder.Entity("EscolaAmarelinha.Models.Professor", b =>
                {
                    b.Property<int>("IdProf")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("IdadeProf")
                        .HasColumnType("int");

                    b.Property<string>("NomeProf")
                        .HasColumnType("varchar(100)");

                    b.Property<double>("Salario")
                        .HasColumnType("double");

                    b.Property<bool>("StatusProf")
                        .HasColumnType("tinyint(1)");

                    b.HasKey("IdProf");

                    b.ToTable("Professores");
                });

            modelBuilder.Entity("EscolaAmarelinha.Models.Boletim", b =>
                {
                    b.HasOne("EscolaAmarelinha.Models.Aluno", "Aluno")
                        .WithMany("Boletim")
                        .HasForeignKey("IdAluno")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("EscolaAmarelinha.Models.Disciplina", "Disciplina")
                        .WithMany("Boletim")
                        .HasForeignKey("IdDisciplina")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Aluno");

                    b.Navigation("Disciplina");
                });

            modelBuilder.Entity("EscolaAmarelinha.Models.Aluno", b =>
                {
                    b.Navigation("Boletim");
                });

            modelBuilder.Entity("EscolaAmarelinha.Models.Disciplina", b =>
                {
                    b.Navigation("Boletim");
                });
#pragma warning restore 612, 618
        }
    }
}
